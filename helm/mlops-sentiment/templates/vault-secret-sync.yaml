{{- if .Values.vault.enabled }}
{{- if .Values.vault.agent.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "mlops-sentiment.fullname" . }}-vault-agent-config
  labels:
    {{- include "mlops-sentiment.labels" . | nindent 4 }}
data:
  vault-agent-config.hcl: |
    # Vault Agent configuration for automatic secret injection

    pid_file = "/home/vault/pidfile"

    vault {
      address = "{{ .Values.vault.address }}"
      {{- if .Values.vault.namespace }}
      namespace = "{{ .Values.vault.namespace }}"
      {{- end }}
    }

    auto_auth {
      method "kubernetes" {
        mount_path = "auth/{{ .Values.vault.auth.path }}"
        config = {
          role = "{{ .Values.vault.role }}"
        }
      }

      sink "file" {
        config = {
          path = "/vault/token"
        }
      }
    }

    template {
      source      = "/vault/configs/api-key.tpl"
      destination = "/vault/secrets/api-key"
    }

    template {
      source      = "/vault/configs/database-creds.tpl"
      destination = "/vault/secrets/database-creds"
    }

    template {
      source      = "/vault/configs/api-keys.tpl"
      destination = "/vault/secrets/api-keys"
    }

    template {
      source      = "/vault/configs/mlflow-config.tpl"
      destination = "/vault/secrets/mlflow-config"
    }

    template {
      source      = "/vault/configs/monitoring-config.tpl"
      destination = "/vault/secrets/monitoring-config"
    }

    template {
      source      = "/vault/configs/cloud-credentials.tpl"
      destination = "/vault/secrets/cloud-credentials"
    }

  api-key.tpl: |
    {{`{{- with secret "`}}{{ .Values.vault.secretsPath }}{{ `" -}}`}}
    {{`{{ .Data.data.api_key }}`}}
    {{`{{- end }}`}}

  database-creds.tpl: |
    {{`{{- with secret "`}}{{ .Values.vault.secretsPath }}/database{{ `" -}}`}}
    DB_HOST={{`{{ .Data.data.host }}`}}
    DB_PORT={{`{{ .Data.data.port }}`}}
    DB_USER={{`{{ .Data.data.username }}`}}
    DB_PASS={{`{{ .Data.data.password }}`}}
    DB_NAME={{`{{ .Data.data.database }}`}}
    {{`{{- end }}`}}

  api-keys.tpl: |
    {{`{{- with secret "`}}{{ .Values.vault.secretsPath }}/api-keys{{ `" -}}`}}
    API_KEY={{`{{ .Data.data.api_key }}`}}
    WEBHOOK_SECRET={{`{{ .Data.data.webhook_secret }}`}}
    JWT_SECRET_KEY={{`{{ .Data.data.jwt_secret }}`}}
    {{`{{- end }}`}}

  mlflow-config.tpl: |
    {{`{{- with secret "`}}{{ .Values.vault.secretsPath }}/mlflow{{ `" -}}`}}
    MLFLOW_TRACKING_URI={{`{{ .Data.data.tracking_uri }}`}}
    MLFLOW_S3_ENDPOINT_URL={{`{{ .Data.data.s3_endpoint }}`}}
    AWS_ACCESS_KEY_ID={{`{{ .Data.data.aws_access_key }}`}}
    AWS_SECRET_ACCESS_KEY={{`{{ .Data.data.aws_secret_key }}`}}
    {{`{{- end }}`}}

  monitoring-config.tpl: |
    {{`{{- with secret "`}}{{ .Values.vault.secretsPath }}/monitoring{{ `" -}}`}}
    PROMETHEUS_URL={{`{{ .Data.data.prometheus_url }}`}}
    GRAFANA_URL={{`{{ .Data.data.grafana_url }}`}}
    SLACK_WEBHOOK_URL={{`{{ .Data.data.slack_webhook }}`}}
    PAGERDUTY_INTEGRATION_KEY={{`{{ .Data.data.pagerduty_key }}`}}
    {{`{{- end }}`}}

  cloud-credentials.tpl: |
    {{`{{- with secret "`}}{{ .Values.vault.secretsPath }}/cloud{{ `" -}}`}}
    {{- if .Data.data.aws_access_key }}
    AWS_ACCESS_KEY_ID={{`{{ .Data.data.aws_access_key }}`}}
    AWS_SECRET_ACCESS_KEY={{`{{ .Data.data.aws_secret_key }}`}}
    AWS_DEFAULT_REGION={{`{{ .Data.data.aws_region }}`}}
    {{- end }}
    {{- if .Data.data.azure_client_id }}
    AZURE_CLIENT_ID={{`{{ .Data.data.azure_client_id }}`}}
    AZURE_CLIENT_SECRET={{`{{ .Data.data.azure_client_secret }}`}}
    AZURE_TENANT_ID={{`{{ .Data.data.azure_tenant_id }}`}}
    {{- end }}
    {{- if .Data.data.gcp_service_account }}
    GOOGLE_APPLICATION_CREDENTIALS={{`{{ .Data.data.gcp_service_account }}`}}
    {{- end }}
    {{`{{- end }}`}}
{{- end }}
{{- end }}

