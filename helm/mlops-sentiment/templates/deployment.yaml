apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mlops-sentiment.fullname" . }}
  labels:
    {{- include "mlops-sentiment.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "mlops-sentiment.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
      labels:
        {{- include "mlops-sentiment.selectorLabels" . | nindent 8 }}
        version: {{ .Chart.AppVersion }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mlops-sentiment.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.modelPersistence.initContainer.enabled }}
      initContainers:
        - name: model-preloader
          image: {{ .Values.modelPersistence.initContainer.image }}
          imagePullPolicy: {{ .Values.modelPersistence.initContainer.pullPolicy }}
          command: ["python3", "/scripts/init-models.py"]
          env:
            - name: MODEL_NAME
              value: {{ .Values.modelPersistence.initContainer.modelName | quote }}
            - name: MODEL_CACHE_DIR
              value: "/models"
            - name: ENABLE_ONNX_OPTIMIZATION
              value: {{ .Values.modelPersistence.initContainer.enableOnnx | quote }}
          volumeMounts:
            - name: model-cache
              mountPath: /models
            - name: init-scripts
              mountPath: /scripts
          resources:
            {{- toYaml .Values.modelPersistence.initContainer.resources | nindent 12 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "mlops-sentiment.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          env:
            {{- include "mlops-sentiment.env" . | nindent 12 }}
          livenessProbe:
            {{- toYaml .Values.deployment.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.deployment.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /app/.cache
            {{- if .Values.modelPersistence.enabled }}
            - name: model-cache
              mountPath: /models
              readOnly: false
            {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
        {{- if .Values.modelPersistence.enabled }}
        - name: model-cache
          persistentVolumeClaim:
            claimName: {{ include "mlops-sentiment.fullname" . }}-model-cache
        {{- end }}
        {{- if .Values.modelPersistence.initContainer.enabled }}
        - name: init-scripts
          configMap:
            name: {{ include "mlops-sentiment.fullname" . }}-model-init-script
            defaultMode: 0755
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
